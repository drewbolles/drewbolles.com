{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"eaee543c-ef62-5bf3-b687-6dd45c366fce","excerpt":"Sass  is an incredible preprocessor, and over the last year has revolutionized my work flow. One of the slickest features, in my opinion, is…","html":"<p><a href=\"http://sass-lang.com\" title=\"Sass, CSS preprocessor\">Sass</a> is an incredible preprocessor, and over the last year has revolutionized my work flow. One of the slickest features, in my opinion, is Sass’s ability to extend classes you’ve already authored. A quick example would be:</p>\n<div class=\"gatsby-highlight\" data-language=\"sass\"><pre class=\"language-sass\"><code class=\"language-sass\"><span class=\"token selector\">.first-class</span>\n<span class=\"token property-line\"><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 12px</span>\n\n<span class=\"token selector\">.second-class</span>\n<span class=\"token atrule-line\"><span class=\"token atrule\">@extend</span> .first-class</span></code></pre></div>\n<p>What we have is ‘.second-class’ extending ‘.first-class’. The output would result in:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.first-class,\nsecond-class</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 12px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>As you can see, the ‘@extend’ function concatenates our styles for us.</p>\n<h3>What does this mean?</h3>\n<p>It means we have the ability to create helper partials that we can extend all over the place! These helper classes are similar to variables in the sense that we can extend them all over, but only need to change them in one place to update everywhere. An example:</p>\n<div class=\"gatsby-highlight\" data-language=\"sass\"><pre class=\"language-sass\"><code class=\"language-sass\"><span class=\"token comment\">// \\_placeholders.sass</span>\n\n<span class=\"token selector\">%margin--auto</span>\n<span class=\"token property-line\"><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> auto</span>\n\n<span class=\"token selector\">%bg--white</span>\n<span class=\"token property-line\"><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #fff</span>\n\n<span class=\"token comment\">// \\_layout.sass</span>\n\n<span class=\"token selector\">.header</span>\n<span class=\"token atrule-line\"><span class=\"token atrule\">@extend</span> %margin--auto</span>\n<span class=\"token atrule-line\"><span class=\"token atrule\">@extend</span> %bg--white</span></code></pre></div>\n<p>In the example above, we have a Sass partial named ’_placeholders.sass’. This partial will hold all of our ‘invisible classes’. Invisible classes do not get output into your compiled CSS, they are just meant to extend within your Sass files.</p>\n<p>By using extends, you can create placeholder classes for your box model, common colors, backgrounds, fonts, and a myriad of other presentational styles that are ready to be extended throughout your Sass.</p>\n<h3>What should go in my placeholder file?</h3>\n<p>There is no right and wrong answer here, by the rule of thumb for me is generally presentational classes. Mine will often look like</p>\n<div class=\"gatsby-highlight\" data-language=\"sass\"><pre class=\"language-sass\"><code class=\"language-sass\"><span class=\"token comment\">// \\_placeholders.sass</span>\n\n<span class=\"token comment\">/////////////////////////////////////////</span>\n<span class=\"token comment\">// text</span>\n<span class=\"token comment\">/////////////////////////////////////////</span>\n\n<span class=\"token selector\">%text--center</span>\n<span class=\"token property-line\"><span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center</span>\n\n<span class=\"token selector\">%text--right</span>\n<span class=\"token property-line\"><span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> right</span>\n\n<span class=\"token selector\">%text--left</span>\n<span class=\"token property-line\"><span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> left</span>\n\n<span class=\"token comment\">/////////////////////////////////////////</span>\n<span class=\"token comment\">// floats</span>\n<span class=\"token comment\">/////////////////////////////////////////</span>\n\n<span class=\"token selector\">%float--left</span>\n<span class=\"token property-line\"><span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left</span>\n\n<span class=\"token selector\">%float--right</span>\n<span class=\"token property-line\"><span class=\"token property\">float</span><span class=\"token punctuation\">:</span> right</span>\n\n<span class=\"token selector\">%float--none</span>\n<span class=\"token property-line\"><span class=\"token property\">float</span><span class=\"token punctuation\">:</span> none</span>\n\n<span class=\"token comment\">/////////////////////////////////////////</span>\n<span class=\"token comment\">// colors</span>\n<span class=\"token comment\">/////////////////////////////////////////</span>\n\n<span class=\"token selector\">%color--white</span>\n<span class=\"token property-line\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fff</span>\n\n<span class=\"token selector\">%color--black</span>\n<span class=\"token property-line\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #000</span>\n\n<span class=\"token selector\">%color--grey</span>\n<span class=\"token property-line\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$grey</span></span>\n\n<span class=\"token comment\">// etc, etc</span></code></pre></div>\n<p>These classes will be available for me to extend throughout my layout and individual modules. My framework <a href=\"http://www.caverncss.com\" title=\"Cavern CSS\">Cavern</a> is based on these invisible classes, and uses them and Sass variables to control the output and weight of your final CSS file. Check it out if you’re interested in learning more about Sass and ‘@extends’!</p>","frontmatter":{"title":"How you should be using Sass extends","date":"December 27, 2013"}}},"pageContext":{"slug":"/blog/2013/12/27/why-you-should-be-using-sass-extends/","previous":{"fields":{"slug":"/blog/2013/12/27/defining-your-content-views/"},"frontmatter":{"title":"Defining your content views"}},"next":{"fields":{"slug":"/blog/2013/12/28/no-javascript-toggle-content-feature/"},"frontmatter":{"title":"A no-javascript toggle content feature"}}}}