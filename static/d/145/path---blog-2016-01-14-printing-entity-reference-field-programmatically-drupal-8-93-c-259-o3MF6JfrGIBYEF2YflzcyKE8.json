{"data":{"site":{"siteMetadata":{"title":"Drew Bolles","author":"drewbolles@gmail.com"}},"markdownRemark":{"id":"4ea88d98-6b79-5c9d-bd59-0742ce9a59c7","excerpt":"I often want to print the output of an Entity Reference field somewhere - a page template, a complicated node template, or in a custom…","html":"<p>I often want to print the output of an Entity Reference field somewhere - a page template, a complicated node template, or in a custom module that is organizing data. In Drupal 7, you could do this a few ways and I usually used <code class=\"language-text\">field_get_items</code> and <code class=\"language-text\">field_view_field</code>. With Drupal 8 it’s a bit different, there’s now a view method that accepts view mode arguments. Let’s dive into some code</p>\n<h3>Printing the value of a field</h3>\n<p>Drupal 7:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$node</span> <span class=\"token operator\">=</span> <span class=\"token function\">node_load</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// random NID</span>\n<span class=\"token variable\">$field_items</span> <span class=\"token operator\">=</span> <span class=\"token function\">field_get_items</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'node'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$node</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'field_entity_reference'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$field_output</span> <span class=\"token operator\">=</span> <span class=\"token function\">field_view_value</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'node'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$node</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'field_entity_reference'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$field_items</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'type'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token single-quoted-string string\">'default'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>or</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$node</span> <span class=\"token operator\">=</span> <span class=\"token function\">node_load</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// random NID</span>\n<span class=\"token variable\">$field_output</span> <span class=\"token operator\">=</span> <span class=\"token function\">field_view_field</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'node'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$node</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'field_entity_reference'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'type'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token single-quoted-string string\">'default'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Drupal 8:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$node</span> <span class=\"token operator\">=</span> \\<span class=\"token package\">Drupal</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">entityManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getStorage</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'node'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// random NID</span>\n<span class=\"token variable\">$field_output</span> <span class=\"token operator\">=</span> <span class=\"token function\">entity_view</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$node</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'field_entity_reference'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">entity</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'default'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>As you can see, it’s similar. Grabbing the node is much more concise in Drupal 7, but constructing the field output is much more straight forward in Drupal 8. We’re taking advantage of the entity_view function which wraps the view() method that is part of entities and fields. Granted, we’re not testing for the existence of the field, or the data. A more complete example would be:</p>\n<p>Drupal 8:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$node</span> <span class=\"token operator\">=</span> \\<span class=\"token package\">Drupal</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">entityManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getStorage</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'node'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// random NID</span>\n<span class=\"token comment\">// Test if this node has our field</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$node</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">hasField</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'field_entity_reference'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">$entity_ref</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$node</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'field_entity_reference'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// if our field has data</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$entity_ref</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$output</span> <span class=\"token operator\">=</span> <span class=\"token function\">entity_view</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$entity_ref</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">entity</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'default'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now we’re able to output our referenced entities wherever they need to be output!</p>","fields":{"slug":"/blog/2016/01/14/printing-entity-reference-field-programmatically-drupal-8/"},"frontmatter":{"title":"Printing an Entity Reference field programmatically in Drupal 8","date":"January 14, 2016"}}},"pageContext":{"slug":"/blog/2016/01/14/printing-entity-reference-field-programmatically-drupal-8/","previous":{"fields":{"slug":"/blog/2016/01/13/getting-started-with-drupal-8-theming/"},"frontmatter":{"title":"Getting started with Drupal 8 Theming"}},"next":{"fields":{"slug":"/blog/2016/01/14/introducing-gotham-drupal-8-starter-theme/"},"frontmatter":{"title":"Introducing Gotham, a Drupal 8 starter theme"}}}}